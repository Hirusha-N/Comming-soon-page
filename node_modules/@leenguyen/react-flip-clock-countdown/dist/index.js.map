{"version":3,"file":"index.js","sources":["../src/FlipClockDigit.tsx","../src/utils.ts","../src/FlipClockCountDown.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport React from 'react';\nimport styles from './styles.module.css';\nimport { Digit, FlipClockCountdownProps } from './types';\n\nexport interface FlipClockDigitProps {\n  current: Digit;\n  next: Digit;\n  className?: string;\n  style?: FlipClockCountdownProps['digitBlockStyle'];\n}\n\ntype FlipClockDigitState = {\n  current: Digit;\n  next: Digit;\n};\n\nexport default function FlipClockDigit(props: FlipClockDigitProps) {\n  const { current, next, className, style } = props;\n  const [digit, setDigit] = React.useState<FlipClockDigitState>({ current, next });\n  const [flipped, setFlipped] = React.useState(false);\n\n  React.useEffect(() => {\n    if (digit.current !== current) {\n      if (digit.current === digit.next) {\n        setDigit({ ...digit, next });\n      }\n      setFlipped(true);\n    } else {\n      setFlipped(false);\n    }\n  }, [current, next]);\n\n  const handleTransitionEnd = (): void => {\n    setDigit({ current, next });\n    setFlipped(false);\n  };\n\n  return (\n    <div className={clsx(styles.fcc__digit_block, className)} style={style}>\n      <div className={styles.fcc__next_above}>{digit.next}</div>\n      <div className={styles.fcc__current_below}>{digit.current}</div>\n      <div className={clsx(styles.fcc__card, { [styles.fcc__flipped]: flipped })} onTransitionEnd={handleTransitionEnd}>\n        <div className={clsx(styles.fcc__card_face, styles.fcc__card_face_front)}>{digit.current}</div>\n        <div className={clsx(styles.fcc__card_face, styles.fcc__card_face_back)}>{digit.next}</div>\n      </div>\n    </div>\n  );\n}\n","import { Digit, FlipClockCountdownTimeDelta, FlipClockCountdownTimeDeltaFormatted } from './types';\n\nexport const defaultTimeDelta = {\n  total: 0,\n  days: 0,\n  hours: 0,\n  minutes: 0,\n  seconds: 0\n};\n\nexport function calcTimeDelta(target: Date | number | string): FlipClockCountdownTimeDelta {\n  const date = new Date(target);\n  if (isNaN(date.getTime())) {\n    throw Error('Invalid date');\n  }\n  const now = new Date();\n  let timeLeft = Math.round((date.getTime() - now.getTime()) / 1000); // convert to seconds\n  if (timeLeft < 0) timeLeft = 0;\n\n  return {\n    total: timeLeft,\n    days: Math.floor(timeLeft / (24 * 60 * 60)),\n    hours: Math.floor((timeLeft / 3600) % 24),\n    minutes: Math.floor((timeLeft / 60) % 60),\n    seconds: Math.floor(timeLeft % 60)\n  };\n}\n\nexport function pad(n: number): Digit[] {\n  return ('0'.repeat(Math.max(0, 2 - String(n).length)) + String(n)).split('');\n}\n\nexport function parseTimeDelta(timeDelta: FlipClockCountdownTimeDelta): FlipClockCountdownTimeDeltaFormatted {\n  const nextTimeDelta = calcTimeDelta(new Date().getTime() + (timeDelta.total - 1) * 1000);\n\n  return {\n    days: {\n      current: pad(timeDelta.days),\n      next: pad(nextTimeDelta.days)\n    },\n    hours: {\n      current: pad(timeDelta.hours),\n      next: pad(nextTimeDelta.hours)\n    },\n    minutes: {\n      current: pad(timeDelta.minutes),\n      next: pad(nextTimeDelta.minutes)\n    },\n    seconds: {\n      current: pad(timeDelta.seconds),\n      next: pad(nextTimeDelta.seconds)\n    }\n  };\n}\n\nexport function convertToPx(n?: string | number): string | undefined {\n  if (n === undefined) return undefined;\n  if (typeof n === 'string') return n;\n  return `${n}px`;\n}\n","import styles from './styles.module.css';\n//\nimport clsx from 'clsx';\nimport React from 'react';\nimport FlipClockDigit from './FlipClockDigit';\nimport { FlipClockCountdownProps, FlipClockCountdownState, FlipClockCountdownUnitTimeFormatted } from './types';\nimport { calcTimeDelta, convertToPx, parseTimeDelta } from './utils';\n\n/**\n * A 3D animated flip clock countdown component for React.\n */\nfunction FlipClockCountdown(props: FlipClockCountdownProps) {\n  const {\n    to,\n    className,\n    style,\n    children,\n    onComplete,\n    onTick,\n    showLabels,\n    showSeparators,\n    labels,\n    labelStyle,\n    digitBlockStyle,\n    separatorStyle,\n    dividerStyle,\n    duration,\n    renderMap,\n    ...other\n  } = props;\n  // we don't immediately construct the initial state here because it might\n  // lead to some bugs with server-side rendering and hydration.\n  const [state, setState] = React.useState<FlipClockCountdownState>();\n  const countdownRef = React.useRef(0);\n  function clearTimer() {\n    window.clearInterval(countdownRef.current);\n  }\n\n  function constructState(): FlipClockCountdownState {\n    const timeDelta = calcTimeDelta(to);\n    return {\n      timeDelta,\n      completed: timeDelta.total === 0\n    };\n  }\n\n  function tick() {\n    const newState = constructState();\n    setState(newState);\n    onTick(newState);\n    if (newState.completed) {\n      clearTimer();\n      onComplete();\n    }\n  }\n\n  React.useEffect(() => {\n    setState(constructState());\n    clearTimer();\n    countdownRef.current = window.setInterval(tick, 1000);\n\n    return () => clearTimer();\n  }, [to]);\n\n  const containerStyles = React.useMemo<React.CSSProperties>(() => {\n    const s = {\n      '--fcc-flip-duration': duration === undefined || duration < 0 || duration > 1 ? undefined : `${duration}s`,\n      '--fcc-digit-block-width': convertToPx(digitBlockStyle?.width),\n      '--fcc-digit-block-height': convertToPx(digitBlockStyle?.height),\n      '--fcc-shadow': digitBlockStyle?.boxShadow,\n      '--fcc-digit-font-size': convertToPx(digitBlockStyle?.fontSize),\n      '--fcc-digit-color': digitBlockStyle?.color,\n      '--fcc-label-font-size': convertToPx(labelStyle?.fontSize),\n      '--fcc-label-color': labelStyle?.color,\n      '--fcc-divider-color': dividerStyle?.color,\n      '--fcc-divider-height': convertToPx(dividerStyle?.height),\n      '--fcc-background': digitBlockStyle?.background || digitBlockStyle?.backgroundColor,\n      '--fcc-separator-size': convertToPx(separatorStyle?.size),\n      '--fcc-separator-color': showSeparators ? separatorStyle?.color : 'transparent',\n      ...style\n    };\n\n    return s;\n  }, [style, digitBlockStyle, labelStyle, duration, dividerStyle, separatorStyle, showSeparators]);\n\n  const _digitBlockStyle = React.useMemo(() => {\n    if (digitBlockStyle) {\n      return {\n        ...digitBlockStyle,\n        background: undefined,\n        backgroundColor: undefined,\n        width: undefined,\n        height: undefined,\n        boxShadow: undefined,\n        fontSize: undefined,\n        color: undefined\n      };\n    }\n    return undefined;\n  }, [digitBlockStyle]);\n\n  const sections = React.useMemo(() => {\n    if (state === undefined) return undefined;\n    const formatted = parseTimeDelta(state.timeDelta);\n    const _renderMap = renderMap.length >= 4 ? renderMap.slice(0, 4) : [true, true, true, true];\n    const _labels = labels.length >= 4 ? labels.slice(0, 4) : ['Days', 'Hours', 'Minutes', 'Seconds'];\n    const times = Object.values(formatted) as FlipClockCountdownUnitTimeFormatted[];\n    const r: [FlipClockCountdownUnitTimeFormatted, string][] = [];\n    _renderMap.forEach((show, i) => {\n      if (show) {\n        r.push([times[i], _labels[i]]);\n      }\n    });\n    return r;\n  }, [renderMap, state]);\n\n  if (state === undefined || sections === undefined) return <React.Fragment></React.Fragment>;\n\n  if (state?.completed) {\n    return <React.Fragment>{children}</React.Fragment>;\n  }\n\n  return (\n    <div\n      {...other}\n      className={clsx(\n        styles.fcc__container,\n        {\n          [styles.fcc__label_show]: showLabels\n        },\n        className\n      )}\n      style={containerStyles}\n      data-testid='fcc-container'\n    >\n      {sections.map(([item, label], idx) => {\n        return (\n          <React.Fragment key={`digit-block-${idx}`}>\n            <div className={styles.fcc__digit_block_container}>\n              {showLabels && (\n                <div className={styles.fcc__digit_block_label} style={labelStyle}>\n                  {label}\n                </div>\n              )}\n              {item.current.map((cItem, cIdx) => (\n                <FlipClockDigit key={cIdx} current={cItem} next={item.next[cIdx]} style={_digitBlockStyle} />\n              ))}\n            </div>\n            {idx < sections.length - 1 && <div className={styles.fcc__colon}></div>}\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n}\n\nFlipClockCountdown.defaultProps = {\n  onComplete: () => {},\n  onTick: () => {},\n  labels: ['Days', 'Hours', 'Minutes', 'Seconds'],\n  renderMap: [true, true, true, true],\n  showLabels: true,\n  showSeparators: true\n};\n\nexport default FlipClockCountdown;\n"],"names":["props","current","next","className","style","React","useState","digit","setDigit","flipped","setFlipped","useEffect","clsx","onTransitionEnd","target","isNaN","date","getTime","Math","round","now","timeLeft","total","days","floor","hours","minutes","seconds","n","repeat","max","String","length","split","undefined","to","children","onComplete","onTick","showLabels","showSeparators","labels","labelStyle","digitBlockStyle","separatorStyle","dividerStyle","duration","renderMap","other","state","setState","useRef","window","clearInterval","countdownRef","calcTimeDelta","timeDelta","completed","constructState","newState","clearTimer","setInterval","tick","useMemo","--fcc-flip-duration","--fcc-digit-block-width","convertToPx","width","--fcc-digit-block-height","height","--fcc-shadow","boxShadow","--fcc-digit-font-size","fontSize","--fcc-digit-color","color","--fcc-label-font-size","--fcc-label-color","--fcc-divider-color","--fcc-divider-height","--fcc-background","background","backgroundColor","--fcc-separator-size","size","--fcc-separator-color","pad","nextTimeDelta","slice","Object","values","formatted","_renderMap","forEach","show","i","r","push","times","_labels","sections","Fragment","containerStyles","map","idx","key","item","cItem","cIdx","FlipClockDigit","_digitBlockStyle","FlipClockCountdown","defaultProps"],"mappings":"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"}